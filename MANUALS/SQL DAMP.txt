0. sehen, wer mit der Datenbank arbeitet (Hosts und Benutzer, die sich mit ihr verbinden)
shell sqlcmd -S localhost -Q "select loginame, hostname from sys.sysprocesses" 

1. Anzeige aller Datenbanken des Servers im kmd
shell sqlcmd.exe -S localhost -E -Q "SELECT name FROM master.dbo.sysdatabases;" 

mit Größe in Megabytes
shell sqlcmd -S localhost -E -Q "SELECT d.name, ROUND(SUM(mf.size) * 8 / 1024, 0) FROM sys.master_files mf INNER JOIN sys.databases d ON d.database_id = mf.database_id WHERE d.database_id > 4 GROUP BY d.name ORDER BY d.name;"

2. Herunterladen der 100 zeilenreichsten Tabellen der Datenbank, der Anzahl der Zeilen und der Größe der Tabellen auf die Festplatte
sqlcmd -S localhost -E -Q "USE %databasename% SELECT TOP 100 s.Name AS SchemaName, t.Name AS TableName, p.rows AS RowCounts, CAST(ROUND((SUM(a.total_pages) / 128.00), 2) AS NUMERIC(36, 2)) AS Total_MB FROM sys.tables t INNER JOIN sys.indexes i ON t.OBJECT_ID = i.object_id INNER JOIN sys.partitions p ON i.object_id = p.OBJECT_ID AND i.index_id = p.index_id INNER JOIN sys.allocation_units a ON p.partition_id = a.container_id INNER JOIN sys.schemas s ON t.schema_id = s.schema_id GRчфOUP BY t.Name, s.Name, p.Rows ORDER BY RowCounts desc, Total_MB  desc;"
2.1. 
sqlcmd -S localhost -E -Q "USE %databasename% SELECT TOP 100 s.Name AS SchemaName, t.Name AS TableName, p.rows AS RowCounts, CAST(ROUND((SUM(a.total_pages) / 128.00), 2) AS NUMERIC(36, 2)) AS Total_MB FROM sys.tables t INNER JOIN sys.indexes i ON t.OBJECT_ID = i.object_id INNER JOIN sys.partitions p ON i.object_id = p.OBJECT_ID AND i.index_id = p.index_id INNER JOIN sys.allocation_units a ON p.partition_id = a.container_id INNER JOIN sys.schemas s ON t.schema_id = s.schema_id GROUP BY t.Name, s.Name, p.Rows ORDER BY RowCounts desc, Total_MB  desc;"

3. Zählen von Zeilen in einer bestimmten Tabelle einer bestimmten Datenbank
sqlcmd -S localhost -E -Q "select count(*) from %databasename%.dbo.%tablename%;"

4. Herunterladen der ersten 10 Datensätze in einer bestimmten Tabelle einer bestimmten Datenbank
sqlcmd -S localhost -E -Q "select top 10 * from %databasename%.dbo.%tablename%;"
sqlcmd -S localhost -E -Q "use %databasename%; select top 10 * from %tablename%" -W

5. Suche nach Spaltennamen in einer bestimmten Datenbank mit %pass% als Beispiel
sqlcmd -S localhost -E -Q "select COLUMN_NAME as 'ColumnName', TABLE_NAME as  'TableName' from %databasename%.INFORMATION_SCHEMA.COLUMNS where COLUMN_NAME like '%pass%';"

6. Auslagern des Inhalts bestimmter Spalten einer bestimmten Tabelle in eine txt-Datei auf einem Laufwerk in einem Ordner (in diesem Beispiel durch den numerischen Wert der Tabelle > Datum
sqlcmd.exe -S localhost -E -Q "select UserKey, EmailAddress, RealName, Phone, FirstName, LastName, CountryName, CreatedDate from %databasename%.dbo.%tablename% where CreatedDate > '2017-11-30';" -W -s"|" -o "C:\temp\123.txt"
FULL >
sqlcmd.exe -S localhost -E -Q "select * from %databasename%.dbo.%tablename%" -W -s"|" -o "C:\Windows\Temp\1.txt"

7. Alle Tabellen einer bestimmten Datenbank ausgeben
shell sqlcmd -S localhost -E -Q "use %databasename%; exec sp_tables" -W

für entfernte/andere lokale Server ändern Sie localhost in ip,port
alternativ localhost,%port% (siehe netstat)

Wenn eine Tabelle oder Datenbank mit 2-3-4 Wörtern benannt ist, wird sie wie folgt entschlüsselt [%databasename/tablename%]

sqlcmd -E -S localhost -Q "BACKUP DATABASE databasename TO DISK='d:\adw.bak'"